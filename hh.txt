плагины, например, такие:

1. ping(address, packet_count, timeout, crit_rt, crit_pl, warn_rt, warn_pl) 
2. tcp(address, port, timeout,  crit_time, warn_time)
3. http_data(address, port, timeout, expected_data, crit_time, warn_time, max_data_size?)
4. http_status(address, port, timeout, expected_status, crit_time, warn_time)

my_plugin = plugins.class(param1='foo', param2='bar')


плагины должны иметь классы аргументов для валидации
clean_value = args.class('dirty_value').validate() - если косяк - должен бросаться эксепшен

легкое веб-приложение должно
 - принимать GET /plugin_name?param1=foo&param2=bar,
 - возвращать json {status => 1, data => {..}} или text/html в случае ошибки
 - логировать куда-то (Pyramid умеет логи как-то)

Ядро должно быть мультипроцессным демоном
    - по умолчанию один чайлд
    - дети плодятся по мере надобности (механизм определения меры?)
    - мастер мониторит таски и кидает их в очередь, а дети разгребают очередь (как вариант)
    - чайлд берет таск, идет к воркеру, получает данные и складывает в базу (noSQL?)


DB mysql -uhh -phhdbpass
hosts:
    host_id
    user_id
    address
    description

checks:
    check_id
    host_id
    state
    check_interval
    next_check


